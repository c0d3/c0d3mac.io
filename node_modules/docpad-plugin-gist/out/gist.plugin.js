// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = function(BasePlugin) {
  var GistPlugin, _ref;
  return GistPlugin = (function(_super) {
    var getGist;

    __extends(GistPlugin, _super);

    function GistPlugin() {
      _ref = GistPlugin.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    GistPlugin.prototype.name = 'gist';

    getGist = function(opts, next) {
      var content, gist, gistScript, gists, _i, _len;
      content = opts.content;
      gists = content.match(/<gist>.+<\/gist>/g);
      if (gists == null) {
        return next();
      }
      for (_i = 0, _len = gists.length; _i < _len; _i++) {
        gist = gists[_i];
        gistScript = gist.replace(/<gist>/g, "<script src='https://gist.github.com/").replace(/\.js/, '');
        if (gistScript.indexOf('?file=') !== -1) {
          gistScript = gistScript.replace(/\?file=/, '.js?file=').replace(/<\/gist>/g, "'></script>");
        } else {
          gistScript = gistScript.replace(/<\/gist>/g, ".js'></script>");
        }
        content = content.replace(gist, gistScript);
      }
      opts.content = content;
      return next();
    };

    GistPlugin.prototype.renderDocument = function(opts, next) {
      var extension, file;
      extension = opts.extension, file = opts.file;
      if (file.type === 'document' && extension === 'html') {
        return getGist(opts, next);
      } else {
        return next();
      }
    };

    return GistPlugin;

  })(BasePlugin);
};
