// Generated by CoffeeScript 1.6.2
(function() {
  var NoTrailingWhitespace, regexes;

  regexes = {
    trailingWhitespace: /[^\s]+[\t ]+\r?$/,
    lineHasComment: /^\s*[^\#]*\#/
  };

  module.exports = NoTrailingWhitespace = (function() {
    function NoTrailingWhitespace() {}

    NoTrailingWhitespace.prototype.rule = {
      name: 'no_trailing_whitespace',
      level: 'error',
      message: 'Line ends with trailing whitespace',
      allowed_in_comments: false,
      description: "This rule forbids trailing whitespace in your code, since it is\nneedless cruft. It is enabled by default."
    };

    NoTrailingWhitespace.prototype.lintLine = function(line, lineApi) {
      var str, token, tokens, _i, _len, _ref, _ref1;

      if (regexes.trailingWhitespace.test(line)) {
        if (!((_ref = lineApi.config['no_trailing_whitespace']) != null ? _ref.allowed_in_comments : void 0)) {
          return true;
        }
        line = line;
        tokens = lineApi.tokensByLine[lineApi.lineNumber];
        if (!tokens) {
          return null;
        }
        _ref1 = (function() {
          var _j, _len, _results;

          _results = [];
          for (_j = 0, _len = tokens.length; _j < _len; _j++) {
            token = tokens[_j];
            if (token[0] === 'STRING') {
              _results.push(token[1]);
            }
          }
          return _results;
        })();
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          str = _ref1[_i];
          line = line.replace(str, 'STRING');
        }
        if (!regexes.lineHasComment.test(line)) {
          return true;
        }
      }
    };

    return NoTrailingWhitespace;

  })();

}).call(this);
