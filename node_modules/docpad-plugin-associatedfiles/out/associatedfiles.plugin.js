// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = function(BasePlugin) {
  var AssociatedfilesPlugin, _ref;
  return AssociatedfilesPlugin = (function(_super) {
    __extends(AssociatedfilesPlugin, _super);

    function AssociatedfilesPlugin() {
      _ref = AssociatedfilesPlugin.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    AssociatedfilesPlugin.prototype.name = 'associatedfiles';

    AssociatedfilesPlugin.prototype.config = {
      associatedFilesPath: 'associated-files',
      sorting: null,
      paging: null
    };

    AssociatedfilesPlugin.prototype.docpadReady = function(opts, next) {
      var DocumentModel, associatedFilesPath, config, createAssociatedFilesPath, docpad, fsUtil, pathUtil;
      docpad = opts.docpad;
      DocumentModel = docpad.DocumentModel;
      config = this.config;
      pathUtil = require('path');
      fsUtil = require('fs');
      associatedFilesPath = this.config.associatedFilesPath;
      createAssociatedFilesPath = this.config.createAssociatedFilesPath;
      DocumentModel.prototype.getAssociatedFilesPath = function() {
        var documentAssociatedFilesPath, documentAssociatedFilesPathNormalized, _ref1;
        documentAssociatedFilesPath = this.get('associatedFilesPath') || this.get('basename');
        documentAssociatedFilesPathNormalized = this.getPath(documentAssociatedFilesPath, associatedFilesPath);
        if ((_ref1 = documentAssociatedFilesPathNormalized.slice(-1)) !== '\\' && _ref1 !== '/') {
          documentAssociatedFilesPathNormalized += pathUtil.sep;
        }
        return documentAssociatedFilesPathNormalized;
      };
      DocumentModel.prototype.getAssociatedFiles = function(sorting, paging) {
        var associatedFilesCollection, document, documentAssociatedFilesPath;
        document = this;
        documentAssociatedFilesPath = document.getAssociatedFilesPath();
        if (sorting == null) {
          sorting = config.sorting || [
            {
              name: 1,
              date: -1
            }
          ];
        }
        if (paging == null) {
          paging = config.paging || null;
        }
        associatedFilesCollection = docpad.getFilesAtPath(documentAssociatedFilesPath, sorting, paging);
        return associatedFilesCollection;
      };
      return next();
    };

    return AssociatedfilesPlugin;

  })(BasePlugin);
};
