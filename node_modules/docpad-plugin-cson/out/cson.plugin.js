// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = function(BasePlugin) {
  var CsonPlugin;
  return CsonPlugin = (function(_super) {

    __extends(CsonPlugin, _super);

    function CsonPlugin() {
      return CsonPlugin.__super__.constructor.apply(this, arguments);
    }

    CsonPlugin.prototype.name = 'cson';

    CsonPlugin.prototype.config = {
      indent: false
    };

    CsonPlugin.prototype.render = function(opts, next) {
      var CSON, config, inExtension, outExtension;
      config = this.config;
      inExtension = opts.inExtension, outExtension = opts.outExtension;
      if (inExtension === 'cson' && (outExtension === 'json' || outExtension === null)) {
        CSON = require('cson');
        return CSON.parse(opts.content, function(err, obj) {
          if (err) {
            return next(err);
          }
          if (config.indent === false) {
            opts.content = JSON.stringify(obj);
          } else if (config.indent === true) {
            opts.content = JSON.stringify(obj, null, 4);
          } else {
            opts.content = JSON.stringify(obj, null, config.indent);
          }
          return next();
        });
      } else {
        return next();
      }
    };

    return CsonPlugin;

  })(BasePlugin);
};
