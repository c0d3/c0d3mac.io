// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = function(BasePlugin) {
  var NavLinksPlugin, _ref;
  return NavLinksPlugin = (function(_super) {
    __extends(NavLinksPlugin, _super);

    function NavLinksPlugin() {
      _ref = NavLinksPlugin.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    NavLinksPlugin.prototype.name = 'navlinks';

    NavLinksPlugin.prototype.config = {
      collections: {}
    };

    NavLinksPlugin.prototype.renderBefore = function(opts, next) {
      var collection, collectionName, config, index, sorting, templateData, _ref1;
      collection = opts.collection, templateData = opts.templateData;
      config = this.config;
      _ref1 = config.collections;
      for (collectionName in _ref1) {
        sorting = _ref1[collectionName];
        collection = this.docpad.getCollection(collectionName);
        if (collection != null) {
          docpad.log('info', 'Adding navlinks for collection: ', collectionName);
          index = 0;
          collection.forEach(function(document) {
            var navlinks, _ref2, _ref3, _ref4, _ref5;
            navlinks = {
              navlinks: {
                title: {
                  next: (_ref2 = collection.at(index + sorting)) != null ? _ref2.get('title') : void 0,
                  prev: (_ref3 = collection.at(index - sorting)) != null ? _ref3.get('title') : void 0
                },
                url: {
                  next: (_ref4 = collection.at(index + sorting)) != null ? _ref4.get('url') : void 0,
                  prev: (_ref5 = collection.at(index - sorting)) != null ? _ref5.get('url') : void 0
                }
              }
            };
            document.set(navlinks);
            return index++;
          });
        }
      }
      return next();
      return this;
    };

    NavLinksPlugin.prototype.extendTemplateData = function(_arg) {
      var templateData;
      templateData = _arg.templateData;
      templateData.getNavLinks = function(styles) {
        var navLinks, nextLink, prevLink;
        if (styles == null) {
          styles = [];
        }
        styles = styles.concat(['navlinks']).join(' ');
        navLinks = this.getDocument().get('navlinks');
        if (navLinks != null) {
          prevLink = nextLink = '';
          if (navLinks.url.prev != null) {
            prevLink = "<a href=\"" + navLinks.url.prev + "\" title=\"Previous Post: " + navLinks.title.prev + "\" class=\"navlinks-prev\">&laquo; " + navLinks.title.prev + "</a>";
          }
          if (navLinks.url.next != null) {
            nextLink = "<a href=\"" + navLinks.url.next + "\" title=\"Next Post: " + navLinks.title.next + "\" class=\"navlinks-next\">" + navLinks.title.next + " &raquo;</a>";
          }
          return "<div class=\"" + styles + "\">\n  " + prevLink + "\n  " + nextLink + "\n</div>";
        }
      };
      return this;
    };

    return NavLinksPlugin;

  })(BasePlugin);
};
